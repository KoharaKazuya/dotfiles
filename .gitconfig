[user]
    email = reflect.results@gmail.com
    name = KoharaKazuya
[core]
    excludesfile = ~/.gitignore
    autocrlf = input
    quotepath = false
    precomposeunicode = true
[push]
    default = current
[remote]
    pushDefault = origin
[gui]
    encoding = UTF-8
[color]
    ui = true
[alias]
    a  = add --all
    b  = branch
    c  = commit --message
    d  = diff
    f  = fetch --prune
    l  = log --oneline
    m  = merge --no-ff
    s  = status --short
    bb = !git backup-branch
    ca = commit --amend
    co = checkout --quiet
    cp = cherry-pick
    dc = diff --cached
    fs = flow feature start
    ff = flow feature finish
    ms = merge --squash
    rs = flow release start
    rf = flow release finish
    mc = !(git cod && git branch --merged | grep -v \\* && git branch --all | grep remotes/origin/ | sed -e 's%remotes/origin/%%') | sort | uniq -d | xargs -I{} sh -c 'git push origin :{} && git branch -d {}'
    cc = !"if [ -z \"$(git d)\" ]; then git cod && git pull && git mc && git aff; else echo 'Not commited files' >&2; ! :; fi"
    aff = !CB=$(git current-branch) && git other-branches | xargs -I{} env CB=$CB sh -c 'git co {} && git merge --ff-only --quiet $CB || echo fast-forward abort: $(git current-branch)' 2> /dev/null && git co $CB && :
    cob = checkout -b
    cod = !git co $(git config private.default-branch)
    reb = ![ -n \"$(git config --local private.default-branch)\" ] && [ -z "$(git d)" ] && CB=$(git current-branch) && git cc && git co $CB && [ -z "$(git b -a | grep 'remotes/' | grep $CB)" ] && git rebase $(git config private.default-branch)
    backup-branch = !CB=$(git current-branch) && git branch --move ${CB}_ && :
    current-branch = !echo $(git branch | grep '^*' | cut -d' ' -f2) && :
    other-branches = !git branch | grep -v '^*' | sort | uniq && :

[private]
    default-branch = master

[include]
    path = ~/.gitconfig.local
