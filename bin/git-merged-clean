#!/bin/sh

set -eu

# 未コミットの変更ファイルがあれば終了
git _modified-files-guard

# リモートに同名のブランチがあるマージ済みブランチ一覧
target_branches=$( \
  # 現在ブランチを除く、マージ済みブランチ一覧
  git branch --merged | grep -v -E '^\*' | \
  # 行頭と行末のスペースを削除
  sed -e 's/^ *//' | sed -e 's/ *$//' | \
  # リモートにも存在するブランチに絞り込む
  sieve 'git rev-parse remotes/origin/{} >/dev/null 2>&1' | \
  # ローカルとリモートブランチが同じ HEAD であるものに絞り込む
  sieve '[ "$(git rev-parse {})" = "$(git rev-parse remotes/origin/{})" ]' \
)

# 引数がある場合は、全ての引数を削除したいブランチ名とし、
# ない場合は全てのマージ済みブランチを削除する
if [ $# = 0 ]
then
  printf "削除したいマージ済みブランチを指定するか、全てのマージ済みブランチを削除するために --all オプションを指定して下さい。\n" >&2
  exit 1
elif [ "$1" = "-a" ] || [ "$1" = "--all" ]
then
  # 各マージ済みブランチを削除
  printf "$target_branches" | xargs git merged-clean
else
  for tb in "$@"
  do
    # マージ済みのブランチのみ対象とする
    if printf "$target_branches" | grep "$tb" >/dev/null 2>&1
    then
      git _processing 'mc' "Removing $tb" git push origin :$tb '&&' git branch -d $tb
    else
      printf "Is not merged branch: $tb\n" >&2
      exit 1
    fi
  done
fi
